@page "/"


<h1>Dashboard Demo</h1>

<div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); gap: 20px; margin-bottom: 40px;">
    <StatCard Value="1250" 
              Label="Total Sales" 
              Icon="💰" 
              IconColor="#10b981"
              Format="C0"
              OnClick="@(() => Console.WriteLine("Sales clicked!"))" />
    
    <StatCard Value="89.5m" 
              Label="Revenue" 
              Icon="📈" 
              IconColor="#3b82f6"
              Format="N1" />
    
    <StatCard Value="@(0.342m)" 
              Label="Conversion Rate" 
              Icon="🎯" 
              IconColor="#f59e0b"
              Format="P1" />
    
    <StatCard Value="456" 
              Label="Active Users" 
              Icon="👥" 
              IconColor="#8b5cf6"
              />
</div>

<HeatMap DataPoints="@heatMapData" 
         Title="Weekly Activity Overview" 
         ShowValues="true" />

@code {
    private List<HeatMapDataPoint> heatMapData = new();

    protected override void OnInitialized()
    {
        GenerateMockHeatMapData();
    }

    private void GenerateMockHeatMapData()
    {
        var random = new Random();
        var days = new[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" };
        
        // IMPORTANTE: Generar datos para CADA combinación de día y semana
        for (int week = 1; week <= 12; week++)
        {
            foreach (var day in days)
            {
                var value = random.Next(0, 25);
                heatMapData.Add(new HeatMapDataPoint
                {
                    DayName = day,
                    WeekNumber = week,  // ESTE ES EL VALOR CLAVE
                    Value = value,
                    Label = $"{day}, Week {week}"
                });
            }
        }
        
        // Debug: Verificar que los datos se generaron correctamente
        Console.WriteLine($"Total data points: {heatMapData.Count}");
        Console.WriteLine($"Weeks range: {heatMapData.Min(d => d.WeekNumber)} to {heatMapData.Max(d => d.WeekNumber)}");
    }
}